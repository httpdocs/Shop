<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  <display-name>shop</display-name>
  <welcome-file-list>
 	<!-- 这个是后台的   <welcome-file>/WEB-INF/main/aindex.jsp</welcome-file> -->
  	
    <!-- 这个是前台的 -->
    <welcome-file>/index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- SpringMVC 的 IOC 容器是 Spring IOC 容器的子容器
SpringMVC 的 IOC 容器中的 bean 可以来引用 Spring IOC 容器中的 bean. 
返回来呢 ? 反之则不行. Spring IOC 容器中的 bean 却不能来引用 SpringMVC IOC 容器中的 bean!
多个 Spring IOC 容器之间可以设置为父子关系，以实现良好的解耦。
Spring MVC WEB 层容器可作为 “业务层” Spring容器的子容器：即 WEB 层容器可以引用业务层容器的 Bean，而业务层容器却访问不到 WEB 层容器的 Bean -->
  <!-- 按照我的理解，这里是spring web的ioc容器，这里把spring容器的bean直接归web的ioc容器统一管理,最好的方法是分开管理。-->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:beans.xml</param-value>
  </context-param>
  
  <!-- 配置自定义的监听器，初始化首页的信息 -->
  <listener>
  	<listener-class>cn.it.shop.listener.InitDataListener</listener-class>
  </listener>
  
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
</web-app>